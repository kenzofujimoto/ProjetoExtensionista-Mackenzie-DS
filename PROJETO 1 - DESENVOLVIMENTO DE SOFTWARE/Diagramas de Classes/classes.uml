@startuml
!include enums.iuml
'== MÓDULO DE PRODUÇÃO ==
class Lote {
  - id: String
  - dataInicio: Date
  - dataFim: Date
  - status: StatusProducao
  - produtoAlvo: Produto
  + iniciarProducao()
  + finalizarProducao()
  + registrarOcorrencia()
}

class OrdemProducao {
  - id: String
  - quantidade: int
  - prioridade: Prioridade
  - status: StatusOrdem
  + criarOrdem()
  + atualizarStatus()
  + verificarMateriais()
}

class ProtocoloLimpeza {
  - data: Date
  - hora: Time
  - produtoUtilizado: String
  - responsavel: Operador
  + registrarLimpeza()
  + validarLimpeza()
}

class Ocorrencia {
  - tipo: TipoOcorrencia
  - descricao: String
  - data: Date
  - hora: Time
  - impacto: String
  + registrarOcorrencia()
}

class Produto {
  - nome: String
  - formula: Formula
  - instrucoesArmazenamento: String
}

class Formula {
  - ingredientes: Map<MateriaPrima, Double>
  + calcularQuantidadeMateriaPrima()
}

'== MÓDULO DE ESTOQUE ==
class MateriaPrima {
  - nome: String
  - lote: String
  - quantidade: double
  - quantidadeMinima: double
  - status: StatusMP
  - dataValidade: Date
  - temperaturaArmazenamento: double
  - umidadeArmazenamento: double
  + verificarDisponibilidade()
  + bloquearLote()
}

class ProdutoFinal {
  - nome: String
  - lote: String
  - quantidade: int
  - dataProducao: Date
  - dataValidade: Date
  - localizacao: String
  - statusQualidade: StatusQualidade
  + atualizarEstoque()
  + verificarValidade()
}

class MovimentacaoEstoque {
  - tipo: TipoMovimentacao
  - data: Date
  - hora: Time
  - quantidade: double
  - responsavel: String
  + registrarMovimentacao()
}

class LocalArmazenamento {
  - codigo: String
  - tipo: TipoLocal
  - capacidade: double
  - ocupacao: double
  - temperatura: double
  - umidade: double
}

'== MÓDULO DE VENDAS ==
class Cliente {
  - nome: String
  - cnpj: String
  - status: StatusCliente
  - limiteCredito: double
  + verificarRestricoes()
}

class Cotacao {
  - id: String
  - data: Date
  - valorTotal: double
  - status: StatusCotacao
  + calcularValor()
  + aprovarCotacao()
}

class PedidoVenda {
  - id: String
  - data: Date
  - status: StatusPedido
  - itens: List<ItemPedido>
  + gerarPedido()
  + atualizarStatus()
}

class ItemPedido {
  - produto: Produto
  - quantidade: int
  - valorUnitario: double
  + calcularSubtotal()
}

class PropostaComercial {
  - id: String
  - data: Date
  - validoAte: Date
  - condicoesPagamento: String
  + gerarPDF()
  + enviarPorEmail()
}

'== MÓDULO DE QUALIDADE ==
class ControleQualidade {
  - lote: Lote
  - dataTeste: Date
  - resultado: ResultadoTeste
  - parametrosTestados: String
  + realizarTeste()
  + aprovarLote()
  + reprovarLote()
}

class EspecificacaoQualidade {
  - produto: Produto
  - parametros: Map<String, String>
  - limitesAceitacao: String
  + verificarConformidade()
}

'== RELACIONAMENTOS ENTRE CLASSES ==
Lote "1" *-- "1" Produto
Lote "1" *-- "0..*" Ocorrencia
Lote "1" -- "1" ControleQualidade

OrdemProducao "1" *-- "1" Produto
OrdemProducao "1" *-- "1" Lote
OrdemProducao "1" *-- "1..*" MateriaPrima

Produto "1" *-- "1" Formula
Formula "1" *-- "1..*" MateriaPrima

MateriaPrima "1" *-- "0..*" MovimentacaoEstoque
ProdutoFinal "1" *-- "0..*" MovimentacaoEstoque
ProdutoFinal "1" *-- "1" LocalArmazenamento

ProdutoFinal "1" -- "1" Produto

Cotacao "1" *-- "1" Cliente
Cotacao "1" *-- "1..*" ItemPedido
PedidoVenda "1" *-- "1" Cotacao
PedidoVenda "1" *-- "1" Cliente
PedidoVenda "1" *-- "1..*" ItemPedido

PropostaComercial "1" *-- "1" Cotacao

ControleQualidade "1" *-- "1" EspecificacaoQualidade
EspecificacaoQualidade "1" *-- "1" Produto


@enduml